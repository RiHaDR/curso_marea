[
["index.html", "Costeo y Evaluación de Reservas Marinas Antes de empezar 0.1 Requisitos", " Costeo y Evaluación de Reservas Marinas Una guía para gestores ambientales Juan Carlos Villaseñor-Derbez Bren School of Environmental Science &amp; Management, UCSB Antes de empezar Este manual es la segunda iteración de los esfuerzos por impulsar el uso de metodologías estandarizadas para la evaluación de reservas marinas. Trabajos anteriores incluyen el manual generalizado de evaluación de reservas marinas en México (Villaseñor-Derbez et al. 2017) y la publicación arbitrada que presenta a MAREA como una herramienta amigable y gratuita (Villaseñor-Derbez et al. 2018). Esta versión del manual pretende incorporar partes de ambos trabajos, pero también incluye una serie de ejercicios prácticos para el uso de MAREA y la nueva App de Costeo de Reservas. Además, el manual está públicamente disponible en internet, donde el lector puede descargar el manual como PDF o EPUB para Kindle. 0.1 Requisitos MAREA y la nueva App de Costeo de Reservas son aplicaciones web, y para poder utilizarlas es necesario tener un explorador de internet y una conexión estable. Aunque no siempre tenemos acceso a internet, este formato nos evita problemas de compatibilidad entre diferentes sistemas operativos. Si tienes un explorador de internet y una conexión estable, puedes usar estas Apps. Si participaste en uno de los cursos presenciales, el USB que recibise contiene este manual como PDF y EPUB además de los datos sintéticos para los ejercicios prácticos y las diapositivas del curso. Puedes distribuir libremente estos materiales, o descargarlos desde el repositorio de GitHub. La versión en línea siempre será la más actualizada. Referencias "],
["introduccion.html", "Capítulo 1 Introducción", " Capítulo 1 Introducción "],
["formas-de-evaluar-reservas.html", "Capítulo 2 Formas de evaluar reservas 2.1 Dentro vs. Fuera 2.2 Antes vs. Después 2.3 Dentro vs. Fuera - Antes vs. Después 2.4 Dentro vs. Fuera - Antes vs. Después multiple", " Capítulo 2 Formas de evaluar reservas 2.1 Dentro vs. Fuera 2.2 Antes vs. Después 2.3 Dentro vs. Fuera - Antes vs. Después 2.4 Dentro vs. Fuera - Antes vs. Después multiple "],
["evaluacion-de-reservas.html", "Capítulo 3 Evaluación de reservas 3.1 Objetivos e indicadores 3.2 Análisis de inferencia de causalidad", " Capítulo 3 Evaluación de reservas 3.1 Objetivos e indicadores 3.2 Análisis de inferencia de causalidad "],
["introduccion-a-marea.html", "Capítulo 4 Introducción a MAREA 4.1 Tipos y formatos de datos 4.2 Capacidades y limitaciones 4.3 Evaluación de reservas en 6 etapas 4.4 Interpretación de resultados", " Capítulo 4 Introducción a MAREA 4.1 Tipos y formatos de datos 4.2 Capacidades y limitaciones 4.3 Evaluación de reservas en 6 etapas 4.4 Interpretación de resultados "],
["uso-de-marea.html", "Capítulo 5 Uso de MAREA 5.1 Evaluación de indicadores biológicos para 1 reserva 5.2 Evaluación de indicadores biológicos y especie objetivo para 1 reserva 5.3 Evaluación de todos los indicadores para 1 reserva 5.4 Evaluación de todos los indicadores para varias reservas, simultáneamente", " Capítulo 5 Uso de MAREA 5.1 Evaluación de indicadores biológicos para 1 reserva 5.2 Evaluación de indicadores biológicos y especie objetivo para 1 reserva 5.3 Evaluación de todos los indicadores para 1 reserva 5.4 Evaluación de todos los indicadores para varias reservas, simultáneamente "],
["errores-comunes-y-solucion-de-problemas.html", "Capítulo 6 Errores comunes y solución de problemas 6.1 Especie / Indicador no tiene diseño BACI 6.2 Diferentes especies en bases biológicas vs pesca", " Capítulo 6 Errores comunes y solución de problemas 6.1 Especie / Indicador no tiene diseño BACI 6.2 Diferentes especies en bases biológicas vs pesca "],
["datos-sinteticos.html", "A Datos sintéticos", " A Datos sintéticos Este apéndice muestra el código usado para obtener los datos sintéticos del curso y el manual de evaluación. Primero, debemos definir una serie de variables que contengan los valores predeterminados o rangos de valores que cada variable puede tomar. Para los propósitos del curso, generaremos únicamente información biológica y económica de peces. # Cargamos los paquetes que necesitamos suppressPackageStartupMessages({ library(magrittr) library(tidyverse) }) ###################################### # Generar variables predeterminadas ###################################### # Las fechas estaran centradas en el dia 1 de cada mes dia &lt;- 1 # Los muestreos ocurren aleatoriamente entre abril y junio mes &lt;- 4:6 # Generaremos datos del 200 al 2018 ano &lt;- 2000:2018 # El estado va a ser NA estado &lt;- NA # La comunidad imaginaria va a ser Las Positas comunidad &lt;- &quot;Las Positas&quot; # En Las Positas hay 4 sitios, dos reservas y dos controles # el tipo de sitio se define mas adelante sitio &lt;- c(&quot;Las cruces&quot;, &quot;Cerro prieto&quot;, &quot;Calencho&quot;, &quot;Popotla&quot;) # No es necesario definir el habitat habitat &lt;- NA # La zona es determinada con esta funcion zona &lt;- function(sitio){ ifelse(sitio %in% c(&quot;Las cruces&quot;, &quot;Cerro prieto&quot;), &quot;Reserva&quot;, &quot;Control&quot;) } # Tipo de proteccion es NA tipo_proteccion &lt;- NA # ANP es NA ANP &lt;- NA # Lista de posibles buzos monitores (http://www.laff.bren.ucsb.edu/laff-network/alumni) buzo_monitor &lt;- c(&quot;Caio Faro&quot;, &quot;Alexandra Smith&quot;, &quot;Diana Flores&quot;, &quot;Ignacia Rivera&quot;, &quot;Wagner Quiros&quot;, &quot;Gonzalo Banda&quot;, &quot;Camila Vargas&quot;, &quot;Diego Undurraga&quot;, &quot;Denise Garcia&quot;, &quot;Cristobal Libertad&quot;, &quot;Catalina Milagros&quot;) # Horas iniciales arbitrarias hora_inicial &lt;- c(&quot;6:50&quot;, &quot;8:40&quot;, &quot;10:20&quot;, &quot;12:15&quot;, &quot;13:40&quot;, &quot;14:45&quot;, &quot;15:20&quot;) # Rango de profundidades iniciales posibles profundidad_inicial &lt;- 5:27 # Esta funcion inventa una profundidad final # segun la profundidad inicial profundidad_final &lt;- function(profundidad_inicial){ round(profundidad_inicial + rnorm(n = 1, mean = 0, sd = 1), digits = 1) } # Rango de temperaturas temperatura &lt;- 25:27 # Rango de visibilidades visibilidad &lt;- 3:12 # Corriente es NA corriente &lt;- NA # Numeros de transectos transecto &lt;- 1:12 # Crear un origen en comun para las secuencias aleatorias set.seed(42) # De la lista de especies filtramos para tener # especies menores a 160 cm y que tengan todos # los parametros de a,b, NT y Lmax spp &lt;- MPAtools::species_bio %&gt;% filter(Lmax &lt; 160) %&gt;% select(GeneroEspecie, a, b, NT, Lmax) %&gt;% drop_na() %&gt;% sample_n(15) # Crear un vector con todas las especies genero_especie &lt;- spp$GeneroEspecie # Esta funcion inventa una talla observada con una # distribucion normal con promedio = la mitad entre # 0 y la longitud maxima reportada y desviacion # estandar = 0.3 * el promedio tallas &lt;- function(spp, generoespecie){ # calcular talla media talla &lt;- spp %&gt;% filter(GeneroEspecie == generoespecie) %$% Lmax / 2 # obtener ruido al rededor de la talla media noise &lt;- rnorm(n = 1, mean = 0, sd = 0.3 * talla / 2) # Redondear para evitar decimales round(talla + noise) } # Esta funcion regresa la abundancia de la especie # que es un numero que sigue una distribucion de # poisson con Lambda = 12 mean_sp &lt;- function(generoespecie){ rpois(n = 1, lambda = 12) } # Esta funcion regresa el par RC para cada sitio rc &lt;- function(sitio){ ifelse(sitio %in% c(&quot;Las cruces&quot;, &quot;Calencho&quot;), &quot;Las cruces - Calencho&quot;, &quot;Cerro prieto - Popotla&quot;) } ###################################### # Simular datos ###################################### # Crear un data.frame vacio datos &lt;- tibble(Dia = NA, Mes = NA, Ano = NA, Estado = NA, Comunidad = NA, Sitio = NA, Latitud = NA, Longitud = NA, Habitat = NA, Zona = NA, TipoProteccion = NA, ANP = NA, BuzoMonitor = NA, HoraInicial = NA, ProfundidadInicial = NA, ProfundidadFinal = NA, Temperatura = NA, Visibilidad = NA, Corriente = NA, Transecto = NA, Genero = NA, Especie = NA, GeneroEspecie = NA, Sexo = NA, Talla = NA, ClaseTalla = NA, Abundancia = NA, RC = NA) # Definir un ciclo para iterar cada año for(i in ano){ # El ano es determinado por el ciclo Ano &lt;- i # El estado es constante Estado &lt;- estado # La comunidad es constante Comunidad &lt;- comunidad # Definir un ciclo para iterar cada sitio for(j in sitio){ # El sitio es determinado por el ciclo Sitio &lt;- j #La latitud y longitud son NAs Latitud &lt;- NA Longitud &lt;- NA # El habitat es constante (NA) Habitat &lt;- habitat # Definir la zona segun la funcion anterior Zona &lt;- zona(j) # El tipo de proteccion es constante (NA) TipoProteccion &lt;- tipo_proteccion # El ANP es constante (NA) ANP &lt;- ANP # Definir un ciclo para iterar cada transecto for(k in transecto){ Dia &lt;- dia # Aleatoriamente muestreamos un mes de la lista anterior (mes) Mes &lt;- sample(x = mes, size = 1L) # Escoger aleatoriamente un buzo monitor BuzoMonitor &lt;- sample(x = buzo_monitor, size = 1L) # Escoger aleatoriamente la hora inicial HoraInicial &lt;- hora_inicial[sample(x = 1:7, size = 1L)] # Escoger alteatoriamente la profundidad inicial ProfundidadInicial &lt;- sample(x = profundidad_inicial, size = 1L) # Calcular la profundidad final segun la funcion anterior ProfundidadFinal &lt;- profundidad_final(ProfundidadInicial) # Escoger una temperatura alteatoria Temperatura &lt;- sample(x = temperatura, size = 1L) # Escoger una visibilidad aleatoria Visibilidad &lt;- sample(x = visibilidad, size = 1L) # Corriente es NA Corriente &lt;- NA # El transecto esta determinado por el ciclo Transecto &lt;- k # Obtener un numero aleatorio para la riqueza n_spp &lt;- runif(n = 1, min = 0, max = 10) %&gt;% as.integer() # Muestrear la lista de especies para obtener las # observadas en este transecto GeneroEspecie &lt;- sample(genero_especie, size = n_spp) # Sexo es NA Sexo &lt;- NA # La funcion rc me dice los pares RC RC &lt;- rc(Sitio) # Definir un ciclo para iterar cada especie for(l in GeneroEspecie){ # Separar genero y especie Genero &lt;- str_split(l, &quot; &quot;)[[1]][[1]] Especie &lt;- str_split(l, &quot; &quot;)[[1]][[2]] # Obtener un numero aleatorio entre 1 y 5 para # definir el numero de grupos de tallas observados nobs &lt;- sample(x = 1:5, size = 1L) # Definir un ciclo para iterar cada grupo de observaciones de una spp for(m in 1:nobs){ # Escoger una talla aleatoria segun la funcion anterior Talla &lt;- tallas(spp = spp, generoespecie = l) # Clase talla es constante (NA) ClaseTalla &lt;- NA # Muestrear una abundanciasegun la funcion Abundancia &lt;- mean_sp(generoespecie = l) # Juntar las observaciones de este grupo de tallas datos_ijklm &lt;- tibble(Dia, Mes, Ano, Estado, Comunidad, Sitio, Latitud, Longitud, Habitat, Zona, TipoProteccion, ANP, BuzoMonitor, HoraInicial, ProfundidadInicial, ProfundidadFinal, Temperatura, Visibilidad, Corriente, Transecto, Genero, Especie, GeneroEspecie = l, Sexo, Talla, ClaseTalla, Abundancia, RC) datos &lt;- rbind(datos, datos_ijklm) } # Fin nobs } # Fin especie } # Fin transecto } # Fin sitio } # Fin años # Borrar los NAs originales y agrupar grupos de # talla en caso de que esten duplicados datos %&lt;&gt;% drop_na(dia) %&gt;% group_by(Dia, Mes, Ano, Estado, Comunidad, Sitio, Latitud, Longitud, Habitat, Zona, TipoProteccion, ANP, BuzoMonitor, HoraInicial, ProfundidadInicial, ProfundidadFinal, Temperatura, Visibilidad, Corriente, Transecto, Genero, Especie, GeneroEspecie, Sexo, Talla, ClaseTalla, RC) %&gt;% summarize(Abundancia = sum(Abundancia, na.rm = T)) %&gt;% select(Dia, Mes, Ano, Estado, Comunidad, Sitio, Latitud, Longitud, Habitat, Zona, TipoProteccion, ANP, BuzoMonitor, HoraInicial, ProfundidadInicial, ProfundidadFinal, Temperatura, Visibilidad, Corriente, Transecto, Genero, Especie, GeneroEspecie, Sexo, Talla, ClaseTalla, Abundancia, RC) # Graficar los datos datos %&gt;% ggplot(aes(x = Ano, y = Abundancia, color = Zona, group = Sitio, linetype = RC)) + geom_point(alpha = 0.5, size = 0.5) + stat_summary(geom = &quot;line&quot;, fun.y = &quot;mean&quot;, size = 1) + facet_wrap(~GeneroEspecie, ncol = 3, scales = &quot;free_y&quot;) + startR::ggtheme_plot() + theme(legend.position = &quot;top&quot;) + scale_color_brewer(palette = &quot;Set1&quot;) + xlab(&quot;Año&quot;) Figura A.1: Series de tiempo de los datos antes de agregar tendencias datos &lt;- datos %&gt;% mutate(neg = ifelse(RC == &quot;Cerro prieto - Popotla&quot;, -1, 1), Abundancia = ifelse(Zona == &quot;Reserva&quot; &amp; Ano &gt; 2000, Abundancia * (1 + (neg * ((Ano - 2000) * 0.1))), Abundancia)) # Graficar los datos datos %&gt;% ggplot(aes(x = Ano, y = Abundancia, color = Zona, group = Sitio, linetype = RC)) + geom_point(alpha = 0.5, size = 0.5) + stat_summary(geom = &quot;line&quot;, fun.y = &quot;mean&quot;, size = 1) + facet_wrap(~GeneroEspecie, ncol = 3, scales = &quot;free_y&quot;) + startR::ggtheme_plot() + theme(legend.position = &quot;top&quot;) + scale_color_brewer(palette = &quot;Set1&quot;) + xlab(&quot;Año&quot;) Figura A.2: Series de tiempo de los datos con tendencias (10% anual) despés del primer año. Note como una reserva funciona y otra no. write.csv(x = datos, file = here::here(&quot;materiales&quot;, &quot;datos&quot;, &quot;datos_peces.csv&quot;), row.names = F) "],
["referencias.html", "Referencias", " Referencias "]
]
